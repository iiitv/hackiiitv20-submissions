[{"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\index.js":"1","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\App.js":"3","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Home.jsx":"4","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\NotFoundPage.jsx":"5","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\components\\Navbar.jsx":"6","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserRegistration.jsx":"7","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DoctorRegistration.jsx":"8","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Login.jsx":"9","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\verifyAuthentication.js":"10","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Logout.jsx":"11","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\ProtectedRoute.jsx":"12","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodHospitals.jsx":"13","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodDetails.jsx":"14","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationsDoctor.jsx":"15","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationSlot.jsx":"16","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserNotifications.jsx":"17","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\ReportDoctor.jsx":"18","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserCoins.jsx":"19","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\ethereum\\instanceHealthcare.js":"20","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\ethereum\\instanceEIP20.js":"21","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\ethereum\\web3.js":"22","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\images\\userCoins.jsx":"23"},{"size":593,"mtime":1607697302242,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":2721,"mtime":1607763001092,"results":"27","hashOfConfig":"25"},{"size":1601,"mtime":1608729100058,"results":"28","hashOfConfig":"25"},{"size":175,"mtime":1607635385889,"results":"29","hashOfConfig":"25"},{"size":5502,"mtime":1608825709358,"results":"30","hashOfConfig":"25"},{"size":5317,"mtime":1607669111961,"results":"31","hashOfConfig":"25"},{"size":6431,"mtime":1607675849321,"results":"32","hashOfConfig":"25"},{"size":10137,"mtime":1608731398009,"results":"33","hashOfConfig":"25"},{"size":591,"mtime":1607676368669,"results":"34","hashOfConfig":"25"},{"size":337,"mtime":1607676975813,"results":"35","hashOfConfig":"25"},{"size":1354,"mtime":1607676126737,"results":"36","hashOfConfig":"25"},{"size":2851,"mtime":1608493832483,"results":"37","hashOfConfig":"25"},{"size":2346,"mtime":1607710079929,"results":"38","hashOfConfig":"25"},{"size":2837,"mtime":1607718209226,"results":"39","hashOfConfig":"25"},{"size":9429,"mtime":1608667004581,"results":"40","hashOfConfig":"25"},{"size":3650,"mtime":1607764424533,"results":"41","hashOfConfig":"25"},{"size":3064,"mtime":1608732345956,"results":"42","hashOfConfig":"25"},{"size":4050,"mtime":1608668560705,"results":"43","hashOfConfig":"25"},{"size":336,"mtime":1607764148867,"results":"44","hashOfConfig":"25"},{"size":306,"mtime":1607762059024,"results":"45","hashOfConfig":"25"},{"size":1301,"mtime":1608735106901,"results":"46","hashOfConfig":"25"},{"size":3811,"mtime":1607763087886,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"11csuph",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\index.js",[],["104","105"],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\App.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\NotFoundPage.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\components\\Navbar.jsx",["106","107","108"],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserRegistration.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DoctorRegistration.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Login.jsx",["109","110"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Joi from 'joi-browser';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Button, Label } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Doctor from '../images/doctor.svg';\r\nimport Patient from '../images/patient.svg';\r\n\r\nclass Login extends Component {\r\n    state = { \r\n        user: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        doctor: {\r\n            email: '',\r\n            password: ''\r\n        },\r\n        error: {\r\n            user: {},\r\n            doctor: {}\r\n        }\r\n    };\r\n\r\n    schema = {\r\n        email: Joi.string().email().required().label('Email'),\r\n        password: Joi.string().required().label('Password')\r\n    }\r\n\r\n    validateUser = () => {\r\n        console.log(\"in validateUser\");\r\n        const { error } = Joi.validate(this.state.user, this.schema);\r\n        const errors = {\r\n            user: {},\r\n            doctor: {}\r\n        };\r\n        if(!error) {\r\n            errors.user.email = null;\r\n            errors.user.password = null;\r\n            return errors;\r\n        }\r\n        \r\n        for(let item of error.details)\r\n            errors.user[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateDoctor = () => {\r\n        console.log(\"in validateDoctor\");\r\n        const { error } = Joi.validate(this.state.doctor, this.schema);\r\n        const errors = {\r\n            user: {},\r\n            doctor: {}\r\n        };\r\n        if(!error) {\r\n            errors.doctor.email = null;\r\n            errors.doctor.password = null;\r\n            return errors;\r\n        }\r\n        \r\n        for(let item of error.details)\r\n            errors.doctor[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = (name, value) => {\r\n        const schema1 = {\r\n            [name]: this.schema[name]\r\n        }\r\n        const obj = {\r\n            [name]: value\r\n        }\r\n        const {error} = Joi.validate(obj, schema1);\r\n        //console.log(error.details);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    onChangeUser = (e) => {\r\n        console.log(\"in onChangeUser\");\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        const error = { ...this.state.error };\r\n        const errorMessage = this.validateProperty(name,value);\r\n        //console.log(errorMessage);\r\n        if (errorMessage) error.user[name] = errorMessage;\r\n        else delete error.user[name];\r\n        const user = {...this.state.user};\r\n        user[name] = value;\r\n        this.setState({ user, error});\r\n    }\r\n\r\n    onChangeDoctor = (e) => {\r\n        console.log(\"in onChangeDoctor\");\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        const error = { ...this.state.error };\r\n        const errorMessage = this.validateProperty(name,value);\r\n        //console.log(errorMessage);\r\n        if (errorMessage) error.doctor[name] = errorMessage;\r\n        else delete error.doctor[name];\r\n        const doctor = {...this.state.doctor};\r\n        doctor[name] = value;\r\n        this.setState({ doctor, error});\r\n    }\r\n\r\n    handleSubmitUser = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"in handleSubmitUser\");\r\n\r\n        const errors = this.validateUser();\r\n        //console.log(\"ERR-\",errors);\r\n        this.setState({error : errors});\r\n        if(errors.user.email || errors.user.password)\r\n            return;\r\n        this.doSubmitUser();\r\n    }\r\n\r\n    handleSubmitDoctor = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"in handleSubmitDoctor\");\r\n\r\n        const errors = this.validateDoctor();\r\n        this.setState({error : errors});\r\n        if(errors.doctor.email || errors.doctor.password)\r\n            return;\r\n        this.doSubmitDoctor();\r\n    }\r\n\r\n    doSubmitUser = async () => {\r\n        try {\r\n            console.log(\"in doSubmitUser\");\r\n            const response = await axios.post('http://localhost:9000/api/user/login', this.state.user);\r\n\r\n            const { data } = response;\r\n            console.log(data.token);\r\n            localStorage.setItem('token', data.token);\r\n            const user = {\r\n                email: '',\r\n                password: ''\r\n            };\r\n            this.setState({user});\r\n            window.location = '/';\r\n        } catch (error) {\r\n            console.log('error----',error.response);\r\n            //const {data} = error.response;\r\n            if(error.response && error.response.status === 404)\r\n                toast.error(\"Invalid Details\");\r\n            if(error.response && error.response.status === 401)\r\n                toast.error(\"Wrong Password\");\r\n            if(error.response === undefined || error.response.status === 400)\r\n                toast.error(\"Unexpected Error\");\r\n        }\r\n    }\r\n\r\n    doSubmitDoctor = async () => {\r\n        try {\r\n            console.log(\"in doSubmitDoctor\");\r\n            const response = await axios.post('http://localhost:9000/api/doctor/login', this.state.doctor);\r\n    \r\n            const { data } = response;\r\n            console.log(data.token);\r\n            localStorage.setItem('token', data.token);\r\n            const doctor = {\r\n                email: '',\r\n                password: ''\r\n            };\r\n            this.setState({doctor});\r\n            window.location = '/';\r\n        } catch (error) {\r\n            console.log('error----',error.response);\r\n            //const {data} = error.response;\r\n            if(error.response && error.response.status === 404)\r\n                toast.error(\"Invalid Details\");\r\n            if(error.response && error.response.status === 401)\r\n                toast.error(\"Wrong Password\");\r\n            if(error.response === undefined || error.response.status === 400)\r\n                toast.error(\"Unexpected Error\");\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        return ( \r\n            <div>\r\n                <ToastContainer />\r\n                <div className=\"row mx-auto my-4\" style={{width: '850px'}}>\r\n                    <div className=\"card col-lg-5 mx-auto my-4 bg-secondary\" style={{borderWidth: '3px', borderColor: 'black'}}>\r\n                        <h4 className=\"pt-3 mx-auto\">User Login</h4>\r\n                        <hr className=\"w-50 mx-auto\" />\r\n                        <div className=\"card-img-top mx-auto\" style={{width: '200px'}} >\r\n                            <img src={Patient} width=\"140vw\" />\r\n                        </div>\r\n                        <div className=\"card-body p-0 pt-3\"> \r\n                            <form className=\"container my-auto\" onSubmit={this.handleSubmitUser}>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-bold\">Email address</label>\r\n                                    <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={this.state.user.email} onChange={this.onChangeUser} />\r\n                                    {this.state.error.user.email && <Label color='red' className=\"mt-2\">{this.state.error.user.email}</Label>}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-bold\">Password</label>\r\n                                    <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" value={this.state.user.password} onChange={this.onChangeUser}/>\r\n                                    {this.state.error.user.password && <Label color='red' className=\"mt-2\">{this.state.error.user.password}</Label>}\r\n                                </div>\r\n\r\n                                <Button type=\"submit\" className=\"mt-1 mb-3 ml-1\" color=\"green\">Login</Button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card col-lg-5 mx-auto my-4 bg-secondary\" style={{borderWidth: '3px', borderColor: 'black'}}>\r\n                        <h4 className=\"pt-3 mx-auto\">Hospital/Doctor Login</h4>\r\n                        <hr className=\"w-50 mx-auto\" />\r\n                        <div className=\"card-img-top mx-auto text-center\" style={{width: '200px'}} >\r\n                            <img src={Doctor} width=\"140vw\" />\r\n                        </div>\r\n                        <div className=\"card-body p-0 pt-3\">\r\n                            <form className=\"container my-auto\" onSubmit={this.handleSubmitDoctor}>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-bold\">Email address</label>\r\n                                    <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleInputEmail2\" aria-describedby=\"emailHelp\" value={this.state.doctor.email} onChange={this.onChangeDoctor} />\r\n                                    {this.state.error.doctor.email && <Label color='red' className=\"mt-2\">{this.state.error.doctor.email}</Label>}\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label className=\"font-weight-bold\">Password</label>\r\n                                    <input name=\"password\" type=\"password\" className=\"form-control\" id=\"exampleInputPassword2\" value={this.state.doctor.password} onChange={this.onChangeDoctor}/>\r\n                                    {this.state.error.doctor.password && <Label color='red' className=\"mt-2\">{this.state.error.doctor.password}</Label>}\r\n                                </div>\r\n\r\n                                <Button type=\"submit\" className=\"mt-1 mb-3 ml-1\" color=\"green\">Login</Button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Login;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\verifyAuthentication.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Logout.jsx",["111","112"],"import React, { Component } from 'react';\r\n\r\nclass Logout extends Component {\r\n    \r\n    logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('role');\r\n        window.location = '/';\r\n    }\r\n\r\n    render() { \r\n        {this.logout()};\r\n        return ( null );\r\n    }\r\n}\r\n \r\nexport default Logout;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\ProtectedRoute.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodHospitals.jsx",["113"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Icon } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\n\r\nclass DonateBloodHospitals extends Component {\r\n\r\n    state = { \r\n        doctorList: [],\r\n        filteredDoctorList: [],\r\n        search: ''\r\n     }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const doctorList = await axios.get(\"http://localhost:9000/api/doctor\");\r\n            this.setState({ doctorList: doctorList.data, filteredDoctorList: doctorList.data });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    renderDoctorList = () => {\r\n        const list = this.state.filteredDoctorList.map((doctor,index) => {\r\n            return (\r\n                <div className=\"col-lg-4 my-3\" key={index} >\r\n                    <Card className=\"mx-auto\">\r\n                        <Card.Content key={doctor.name} header={doctor.name} />\r\n                        <Card.Content key={doctor.address} description={doctor.address + \", \" + doctor.city} />\r\n                        <Card.Content key={index} extra>\r\n                            <Link key='1' to={`/user/donateBlood/${doctor._id}`} >\r\n                                <Button color='purple'>View</Button>\r\n                            </Link>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n        return list;\r\n    }\r\n\r\n    searchDoctor = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const filteredDoctorList = this.state.doctorList.filter( doctor => doctor.city.toLowerCase().indexOf(value.toLowerCase().trim())>=0);\r\n        this.setState({ filteredDoctorList, search: value });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container mt-3\">\r\n                <div class=\"input-group mt-4\">\r\n                    <input className=\"form-control border-white\" type='search' name='search' id='search' placeholder=\"Search by city\" value={this.state.search} onChange={this.searchDoctor} autoComplete='off' />\r\n                    <div class=\"input-group-append\">\r\n                        <span className=\"input-group-text bg-white border border-white\"><Icon name='search' className=\"mb-1 ml-2\" /></span>\r\n                    </div>\r\n                </div>\r\n                \r\n                {this.state.filteredDoctorList.length>0 ?\r\n                    <div className=\"row mx-auto mt-3\">\r\n                        { this.state.doctorList.length? this.renderDoctorList() : <h1>No Hospitals/Doctors Available</h1>}\r\n                    </div> : <h2>No Hospital/Doctor Found</h2>\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DonateBloodHospitals;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodDetails.jsx",["114","115"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nclass DonateBloodDetails extends Component {\r\n    state = { \r\n        doctor: '',\r\n        user: '',\r\n        disabled: false\r\n     }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { _id } = jwtDecode(localStorage.getItem('token'));\r\n            const doctor = await axios.get(`http://localhost:9000/api/doctor/${this.props.match.params.id}`);\r\n            const user = await axios.get(`http://localhost:9000/api/user/${_id}`);\r\n            this.setState({ doctor: doctor.data, user: user.data, disabled: user.data.currentBloodDonationRequest });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    donateBlood = async () => {\r\n        console.log('Blood donated');\r\n        try {\r\n            const { _id } = jwtDecode(localStorage.getItem('token'));\r\n            const obj1 = {\r\n                _id,\r\n                hospital: this.state.doctor.name\r\n            }\r\n            const obj2 = {\r\n                hospitalId: this.props.match.params.id,\r\n                userId: _id,\r\n                userName: this.state.user.name\r\n            }\r\n            const updatedUser = await axios.post(`http://localhost:9000/api/user/donateBlood/${_id}`, obj1);\r\n            const res = await axios.post(`http://localhost:9000/api/bloodDonation/new`, obj2);\r\n            this.setState({ disabled: true });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const {name, email, contact, address, city} = this.state.doctor;\r\n        return ( \r\n            <div className=\"container mt-2\">\r\n                <h2 className=\"text-danger\">Hospital/Doctor Details</h2>\r\n                <h4>Name : <span className=\"text-white\">{name}</span></h4>\r\n                <h4>Email : <span className=\"text-white\">{email}</span></h4>\r\n                <h4>Contact : <span className=\"text-white\">{contact}</span></h4>\r\n                <h4>Address : <span className=\"text-white\">{address}, {city}</span></h4>\r\n                <Button color='purple' onClick={this.donateBlood} disabled={this.state.disabled}>Donate Blood</Button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DonateBloodDetails;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationsDoctor.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationSlot.jsx",["116","117","118","119"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Joi from 'joi-browser';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass BloodDonationSlot extends Component {\r\n    state = { \r\n        request: '',\r\n        user: '',\r\n        slot: {\r\n            date: '',\r\n            time: ''\r\n        },\r\n        error: {},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const request = await axios.get(`http://localhost:9000/api/bloodDonation/getRequest/${this.props.match.params.id}`);\r\n            const user = await axios.get(`http://localhost:9000/api/user/${request.data.userId}`);\r\n            const userData = {...user.data};\r\n            userData.dob = userData.dob.substring(0,10);\r\n            this.setState({request: request.data, user: userData});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    schema = {\r\n        date: Joi.date().min('now').required().label('Date'),\r\n        time: Joi.string().required().label('Time')\r\n    }\r\n\r\n    validate = () => {\r\n        console.log(\"validate form\");\r\n        const { error } = Joi.validate(this.state.slot, this.schema);\r\n        if(!error) \r\n            return null;\r\n        console.log(error);\r\n\r\n        const errors = {};\r\n        for(let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = (name, value) => {\r\n        const schema = {\r\n            [name]: this.schema[name]\r\n        }\r\n        const obj = {\r\n            [name]: value\r\n        }\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        const error = { ...this.state.error };\r\n        const errorMessage = this.validateProperty(name,value);\r\n        if (errorMessage) error[name] = errorMessage;\r\n        else delete error[name];\r\n\r\n        const slot = {...this.state.slot};\r\n        slot[name] = value;\r\n        this.setState({ slot, error });\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"handling form\");\r\n\r\n        const errors = this.validate();\r\n        this.setState({error : errors || {}});\r\n        if(errors)\r\n            return;\r\n        this.doSubmit();\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        this.setState({ loading: true, disabled: true });\r\n        try {\r\n            console.log(\"submitting form\");\r\n            const obj = {\r\n                _id: this.props.match.params.id,\r\n                date: this.state.slot.date,\r\n                time: this.state.slot.time\r\n            };\r\n            const requests = await axios.post(\"http://localhost:9000/api/bloodDonation/fixSlot\", obj);\r\n            this.setState({ disabled: true });\r\n            this.props.history.push(\"/doctor/bloodDonations\");\r\n        } catch (error) {\r\n            console.log('error----',error.response);\r\n        }\r\n    }\r\n\r\n    confirmBloodDonation = async () => {\r\n        try {\r\n            console.log(\"in confirmBloodDonation\");\r\n            const confirmDonation = await axios.post(\"http://localhost:9000/api/bloodDonation/confirmBloodDonation/\" + this.props.match.params.id);\r\n            this.props.history.push(\"/doctor/bloodDonations\");\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    bloodDonationDisapproved = async () => {\r\n        try {\r\n            console.log(\"in bloodDonationDisapproved\");\r\n            const disapproveDonation = await axios.post(\"http://localhost:9000/api/bloodDonation/remove/\" + this.props.match.params.id);\r\n            const updateUser = await axios.post(\"http://localhost:9000/api/user/completeBloodDonation/\" + this.state.user._id);\r\n            this.props.history.push(\"/doctor/bloodDonations\");\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"alert alert-warning mx-auto mt-3\" style={{width: '60%', fontWeight: 'bolder', fontSize: '15px', fontFamily: 'Goldman'}}>\r\n                    <div className='row'>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Name : </span>\r\n                            <span className='text-dark'>{this.state.user.name}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Date of Birth : </span>\r\n                            <span className='text-dark'>{this.state.user.dob}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Email : </span>\r\n                            <span className='text-dark'>{this.state.user.email}</span>\r\n                        </div>\r\n                        {/* <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Last Blood Donation Date : </span>\r\n                            <span className='text-dark'>\r\n                                {this.state.user.lastBloodDonationDate ? this.state.user.lastBloodDonationDate : \"(Donating first time)\"}\r\n                            </span>\r\n                        </div> */}\r\n                        \r\n                    </div>\r\n                    { this.state.request.appointmentTime ? \r\n                    <div>\r\n                        <div className='row'>\r\n                            <div className=\"col-lg-6\">\r\n                                <span className='text-danger'>Appointment Date : </span>\r\n                                <span className='text-dark'>{this.state.request.appointmentDate}</span>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <span className='text-danger'>Appointment Time : </span>\r\n                                <span className='text-dark'>{this.state.request.appointmentTime}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row mt-2'>\r\n                            <div className=\"mx-auto\">\r\n                                <Button color=\"blue\" className=\"px-2\" onClick={this.confirmBloodDonation}>Blood Donated</Button>\r\n                                <Button color=\"red\" className=\"ml-1 px-2\" onClick={this.bloodDonationDisapproved}>Disapproved</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null}\r\n                </div>\r\n                { this.state.request.appointmentTime ? \r\n                null :\r\n                <div className='pb-4'>\r\n                    <div className=\"my-5 mx-auto\" style={{width: '40vw', fontFamily: 'Goldman', border: '3px solid rgb(243,9,212)', boxShadow: '5px 5px 15px rgb(243,9,212)', background: 'linear-gradient(to right bottom, rgba(104,177,249,0.9), rgba(243,9,212,0.9))' }}>\r\n                        <h3 className=\"text-center my-3\" style={{fontFamily: 'Goldman'}}>Provide Time Slot</h3>\r\n                        <hr className=\"w-25 mx-auto text-dark font-weight-bolder\" />\r\n                        {/* <div className=\"text-center my-4\">\r\n                            <NewQuizSvg width='130px' />\r\n                        </div> */}\r\n                        <form onSubmit={this.handleSubmit} className=\"px-3\"> \r\n                            <div className='row'>\r\n                                <div className=\"form-group my-2 col-lg-6\">\r\n                                    <label>Date</label>\r\n                                    <input name=\"date\" type=\"Date\" className=\"form-control\" style={{fontFamily: 'Goldman'}} id=\"date\" value={this.state.slot.date} onChange={this.onChange}/>\r\n                                    {this.state.error.date && <div className=\"my-2\" style={{color: 'cyan'}}>{this.state.error.date}</div>}\r\n                                </div>\r\n                                <div className=\"form-group my-2 col-lg-6\">\r\n                                    <label>Time</label>\r\n                                    <input name=\"time\" type=\"time\" className=\"form-control\" style={{fontFamily: 'Goldman'}} id=\"time\" value={this.state.slot.time} onChange={this.onChange}/>\r\n                                    {this.state.error.time && <div className=\"my-2\" style={{color: 'cyan'}}>{this.state.error.time}</div>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <Button type=\"submit\" color='green' className=\"px-2 font-weight-light\">Confirm</Button>\r\n                                <Link to='/doctor/bloodDonations'>\r\n                                    <button type=\"reset\" className=\"btn btn-dark border-2 mx-2 my-3\">Cancel</button>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BloodDonationSlot;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserNotifications.jsx",["120","121"],"import React, { Component } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\nimport axios from 'axios';\r\nimport { Button, Label } from 'semantic-ui-react';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport web3 from '../ethereum/web3';\r\nimport instanceHealthcare from '../ethereum/instanceHealthcare';\r\n\r\nclass UserNotifications extends Component {\r\n    state = { \r\n        bloodDonationRequest:'',\r\n        doctor: '',\r\n        loading: false,\r\n        disabled: false\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const {_id} = jwtDecode(localStorage.getItem('token'));\r\n            const bloodDonationRequest = await axios.get(`http://localhost:9000/api/bloodDonation/user/${_id}`); \r\n            if(bloodDonationRequest.data) {\r\n                const doctor = await axios.get(`http://localhost:9000/api/doctor/${bloodDonationRequest.data.hospitalId}`);\r\n                console.log(bloodDonationRequest.data);\r\n                this.setState({ bloodDonationRequest: bloodDonationRequest.data, doctor: doctor.data });\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    claimCoins = async () => {\r\n        this.setState({ loading: true, disabled: true });\r\n        try {\r\n            const accounts = await web3.eth.getAccounts();\r\n            await instanceHealthcare.methods.sendCoins().send({ from: accounts[0] });\r\n            \r\n            const { _id} = jwtDecode(localStorage.getItem('token'));\r\n            const complete = await axios.post(`http://localhost:9000/api/user/completeBloodDonation/${_id}`);\r\n            const deleteRequest = await axios.post(`http://localhost:9000/api/bloodDonation/remove/${this.state.bloodDonationRequest._id}`);\r\n            this.setState({bloodDonationRequest: ''});\r\n            toast.success('HealthCoins Received');\r\n        } catch (error) {\r\n            console.log(error);\r\n            toast.error(\"Unexpected Error\");\r\n        }\r\n        this.setState({ loading: false, disabled: false });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container my-4\">\r\n                <ToastContainer/>\r\n                {this.state.bloodDonationRequest ? \r\n                <Label className=\"mb-4\" style={{fontSize: '15px', fontWeight: 'normal'}}>\r\n                    <h4 className=\"text-primary font-weight-bold\">Blood Donation Notification</h4>\r\n                    <label style={{color: 'red'}}>Hospital/Doctor Name : </label>\r\n                    <span> {this.state.doctor.name}</span>\r\n                    <br/><br/>\r\n                    <label style={{color: 'red'}}>Address :</label> \r\n                    <span> {this.state.doctor.address}, {this.state.doctor.city}</span>\r\n                    <br/><br/>\r\n                    <label style={{color: 'red'}}>Appointment Date : </label>\r\n                    <span> {this.state.bloodDonationRequest.appointmentDate}</span>\r\n                    <br/><br/>\r\n                    <label style={{color: 'red'}}>Appointment Time : </label>\r\n                    <span> {this.state.bloodDonationRequest.appointmentTime}</span>\r\n                    <br></br>\r\n                    { this.state.bloodDonationRequest.result ? \r\n                    <Button color=\"green\" size=\"small\" className=\"mt-2 px-2\" onClick={this.claimCoins} loading={this.state.loading} disabled={this.state.disabled}>Claim Coins</Button>\r\n                    : null\r\n                    }\r\n                </Label>\r\n                : <h4>No Notifications for Blood Donation</h4>\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default UserNotifications;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\ReportDoctor.jsx",["122"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Input } from 'semantic-ui-react';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\nclass ReportDoctor extends Component {\r\n    state = { \r\n        doctorList: [],\r\n        report: {\r\n            doctor: '',\r\n            reason: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const doctorList = await axios.get(\"http://localhost:9000/api/doctor\");\r\n            this.setState({ doctorList: doctorList.data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        const report = {...this.state.report};\r\n        report[name] = value;\r\n        this.setState({ report });\r\n    }\r\n\r\n    doSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const {email} = jwtDecode(localStorage.getItem('token'));\r\n            const obj = {\r\n                doctorName: this.state.report.doctor,\r\n                userEmail: email, \r\n                reason: this.state.report.reason\r\n            };\r\n            const response = await axios.post('http://localhost:9000/api/report/addReport', obj);\r\n            toast.success(\"Hospital/Doctor Reported\");\r\n            const report = {\r\n                doctor: '',\r\n                reason: ''\r\n            };\r\n            this.setState({report});\r\n        } catch (error) {\r\n            console.log('error----',error.response);\r\n            toast.error(\"Unexpected Error\");\r\n        }\r\n        \r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container my-4\">\r\n                <ToastContainer/>\r\n                <h2 className=\"text-center mb-4\">Report Hospital/Doctor</h2>\r\n    \r\n                <form className=\"mx-auto\" style={{width: '350px'}} onSubmit={this.doSubmit}>\r\n                    <label>Hospital/Doctor</label>\r\n                    <Input list='doctorList' className=\"w-100\" id=\"doctor\" name=\"doctor\" value={this.state.report.doctor} onChange={this.onChange} placeholder='Choose doctor...' />\r\n                        <datalist id='doctorList'>\r\n                        {this.state.doctorList.map(doctor => {\r\n                            return <option key={doctor.name} value={doctor.name + \", \" + doctor.address + \", \" +doctor.city}>{doctor.name + \", \" + doctor.address + \", \" +doctor.city}</option>\r\n                        })}\r\n                    </datalist>\r\n                    <div className=\"form-group mt-3\">\r\n                        <label>Reason</label>\r\n                        <textarea name=\"reason\" type=\"text\" className=\"form-control\" id=\"reason\" value={this.state.report.reason} onChange={this.onChange} />\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" className=\"btn btn-primary my-2\">Submit</button>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ReportDoctor;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserCoins.jsx",["123","124"],"import React, { Component } from 'react';\r\nimport web3 from '../ethereum/web3';\r\nimport instanceEIP20 from '../ethereum/instanceEIP20';\r\nimport instanceHealthcare from '../ethereum/instanceHealthcare';\r\nimport { addressHealthcare } from '../ethereum/addressConfig.json';\r\nimport { Button } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport UserCoinsSvg from '../images/userCoins';\r\n\r\nclass UserCoins extends Component {\r\n    state = {\r\n        account: '', \r\n        balance: '',\r\n        coins: '',\r\n        loading2: false,\r\n        disabled: false\r\n     }\r\n\r\n    async componentDidMount() {\r\n        const accounts = await web3.eth.getAccounts();\r\n        const balance = await instanceEIP20.methods.balanceOf(accounts[0]).call();\r\n        this.setState({ account: accounts[0], balance });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const val = e.target.value;\r\n        this.setState({ coins: val });\r\n    }\r\n\r\n    convertCoinsToEther = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading2: true, disabled: true });\r\n        try {\r\n            await instanceEIP20.methods.convertCoinsToEther(this.state.coins).send({ from: this.state.account });\r\n            const balance = parseInt(this.state.balance) - parseInt(this.state.coins);\r\n            toast.success(\"Ethers transferred to your account successfully!\");\r\n            this.setState({ coins: '', balance, loading2: false, disabled: false });\r\n        } catch (error) {\r\n            console.log(\"error--\",error);\r\n            toast.error(\"Transaction Failed!\");\r\n            this.setState({ loading2: false, disabled: false });\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"container text-center mt-4\">\r\n                <ToastContainer/>\r\n                <div className=\"row mx-auto\" style={{marginTop: '13vh', width: '600px',  boxShadow: '7px 7px 15px cyan'}}>\r\n                    <div className=\"col-lg-4 bg-secondary p-2\" style={{display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n                        <UserCoinsSvg width='100px' />\r\n                    </div>\r\n                    <div className=\"col-lg-8\" style={{color: 'cyan', fontFamily: 'Goldman', background: 'linear-gradient(to right bottom, rgba(0,0,0,0.5), rgba(0,0,0,0.5))'}}>\r\n                        <h3 className=\"mt-4 mb-0 pb-0\" style={{ fontFamily: 'Goldman'}}>My HealthCoins</h3>\r\n                        <hr className=\" mx-auto w-25\" />\r\n                        <h4 className=\"mt-3\">Account : {this.state.account}</h4>\r\n                        <h4 className=\"m-3\">Balance : {this.state.balance} HC</h4>\r\n                        <form>\r\n                            <div className=\"input-group mx-auto\" style={{width: '93%'}}>\r\n                                <input type=\"number\" min=\"1\" className=\"form-control font-weight-bold\" style={{textAlign: 'center'}} value={this.state.coins} onChange={this.onChange} disabled={this.state.disabled} />\r\n                                <div className=\"input-group-append\">\r\n                                    <span className=\"input-group-text\"><strong>HC</strong></span>\r\n                                </div>\r\n                            </div>\r\n                            <span>{this.state.coins? <h5 className='m-3'>Ether Value : {this.state.coins * 0.01} ethers </h5> : null }</span>\r\n                        \r\n                            <div className=\"row mt-3 mb-4\">\r\n                                <span className=\"mx-auto\">\r\n                                    <Button onClick={this.convertCoinsToEther} style={{fontWeight: 'normal'}} size=\"small\" color=\"orange\" inverted loading={this.state.loading2} disabled={this.state.disabled} >Convert to Ethers</Button>\r\n                                </span>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default UserCoins;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\ethereum\\instanceHealthcare.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\ethereum\\instanceEIP20.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\ethereum\\web3.js",["125"],"const Web3 = require('web3');\r\nconst HDWalletProvider = require('@truffle/hdwallet-provider');\r\nrequire('dotenv').config();\r\n\r\nlet web3;\r\n\r\n//Modern DApp Browsers\r\nif(typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n  // We are in the browser and metamask is running.\r\n  web3 = new Web3(window.ethereum);\r\n  window.ethereum.enable();\r\n}\r\n//Legacy Dapp Browsers\r\nelse if (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') {\r\n  // We are in the browser and metamask is running.\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} \r\nelse {\r\n  // We are on the server *OR* the user is not running metamask\r\n  const provider = new Web3.providers.HttpProvider(\r\n    'https://rinkeby.infura.io/v3/5355489b727447fda00f84826bb086de'\r\n  );\r\n  web3 = new Web3(provider);\r\n}\r\n\r\n//Ropsten\r\n// const provider = new HDWalletProvider(\r\n//   'wood shiver rice upon ride island olive source scheme unusual people gauge',\r\n//   'https://ropsten.infura.io/v3/5355489b727447fda00f84826bb086de'\r\n// );\r\n\r\n//Rinkeby\r\n// const provider = new HDWalletProvider(\r\n//   'wood shiver rice upon ride island olive source scheme unusual people gauge',\r\n//   'https://rinkeby.infura.io/v3/5355489b727447fda00f84826bb086de'\r\n// );\r\n\r\n// web3 = new Web3(provider);\r\n\r\nmodule.exports = web3;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\images\\userCoins.jsx",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":29,"column":25,"nodeType":"132","endLine":29,"endColumn":56},{"ruleId":"133","severity":1,"message":"134","line":47,"column":37,"nodeType":"132","endLine":47,"endColumn":184},{"ruleId":"133","severity":1,"message":"134","line":65,"column":37,"nodeType":"132","endLine":65,"endColumn":184},{"ruleId":"130","severity":1,"message":"131","line":195,"column":29,"nodeType":"132","endLine":195,"endColumn":64},{"ruleId":"130","severity":1,"message":"131","line":218,"column":29,"nodeType":"132","endLine":218,"endColumn":63},{"ruleId":"135","severity":1,"message":"136","line":1,"column":8,"nodeType":"137","messageId":"138","endLine":1,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":12,"column":9,"nodeType":"141","messageId":"142","endLine":12,"endColumn":24},{"ruleId":"135","severity":1,"message":"143","line":45,"column":15,"nodeType":"137","messageId":"138","endLine":45,"endColumn":19},{"ruleId":"135","severity":1,"message":"144","line":37,"column":19,"nodeType":"137","messageId":"138","endLine":37,"endColumn":30},{"ruleId":"135","severity":1,"message":"145","line":38,"column":19,"nodeType":"137","messageId":"138","endLine":38,"endColumn":22},{"ruleId":"135","severity":1,"message":"146","line":94,"column":19,"nodeType":"137","messageId":"138","endLine":94,"endColumn":27},{"ruleId":"135","severity":1,"message":"147","line":105,"column":19,"nodeType":"137","messageId":"138","endLine":105,"endColumn":34},{"ruleId":"135","severity":1,"message":"148","line":115,"column":19,"nodeType":"137","messageId":"138","endLine":115,"endColumn":37},{"ruleId":"135","severity":1,"message":"149","line":116,"column":19,"nodeType":"137","messageId":"138","endLine":116,"endColumn":29},{"ruleId":"135","severity":1,"message":"150","line":38,"column":19,"nodeType":"137","messageId":"138","endLine":38,"endColumn":27},{"ruleId":"135","severity":1,"message":"151","line":39,"column":19,"nodeType":"137","messageId":"138","endLine":39,"endColumn":32},{"ruleId":"135","severity":1,"message":"152","line":43,"column":19,"nodeType":"137","messageId":"138","endLine":43,"endColumn":27},{"ruleId":"135","severity":1,"message":"153","line":4,"column":8,"nodeType":"137","messageId":"138","endLine":4,"endColumn":26},{"ruleId":"135","severity":1,"message":"154","line":5,"column":10,"nodeType":"137","messageId":"138","endLine":5,"endColumn":27},{"ruleId":"135","severity":1,"message":"155","line":2,"column":7,"nodeType":"137","messageId":"138","endLine":2,"endColumn":23},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'name' is assigned a value but never used.","'updatedUser' is assigned a value but never used.","'res' is assigned a value but never used.","'requests' is assigned a value but never used.","'confirmDonation' is assigned a value but never used.","'disapproveDonation' is assigned a value but never used.","'updateUser' is assigned a value but never used.","'complete' is assigned a value but never used.","'deleteRequest' is assigned a value but never used.","'response' is assigned a value but never used.","'instanceHealthcare' is defined but never used.","'addressHealthcare' is defined but never used.","'HDWalletProvider' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]