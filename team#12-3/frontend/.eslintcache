[{"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\index.js":"1","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\App.js":"3","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Home.jsx":"4","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\NotFoundPage.jsx":"5","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\components\\Navbar.jsx":"6","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserRegistration.jsx":"7","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DoctorRegistration.jsx":"8","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Login.jsx":"9","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\verifyAuthentication.js":"10","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Logout.jsx":"11","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\ProtectedRoute.jsx":"12","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodHospitals.jsx":"13","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodDetails.jsx":"14","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationsDoctor.jsx":"15","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationSlot.jsx":"16","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserNotifications.jsx":"17"},{"size":593,"mtime":1607697302242,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2437,"mtime":1607718647389,"results":"21","hashOfConfig":"19"},{"size":291,"mtime":1607634969657,"results":"22","hashOfConfig":"19"},{"size":175,"mtime":1607635385889,"results":"23","hashOfConfig":"19"},{"size":4715,"mtime":1607718605133,"results":"24","hashOfConfig":"19"},{"size":5317,"mtime":1607669111961,"results":"25","hashOfConfig":"19"},{"size":6431,"mtime":1607675849321,"results":"26","hashOfConfig":"19"},{"size":10124,"mtime":1607677375810,"results":"27","hashOfConfig":"19"},{"size":591,"mtime":1607676368669,"results":"28","hashOfConfig":"19"},{"size":337,"mtime":1607676975813,"results":"29","hashOfConfig":"19"},{"size":1354,"mtime":1607676126737,"results":"30","hashOfConfig":"19"},{"size":2847,"mtime":1607685727192,"results":"31","hashOfConfig":"19"},{"size":2346,"mtime":1607710079929,"results":"32","hashOfConfig":"19"},{"size":2837,"mtime":1607718209226,"results":"33","hashOfConfig":"19"},{"size":8236,"mtime":1607717870652,"results":"34","hashOfConfig":"19"},{"size":2106,"mtime":1607720480704,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"11csuph",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\index.js",[],["76","77"],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\App.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Home.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\NotFoundPage.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\components\\Navbar.jsx",["78","79"],"import React, { Component } from 'react';\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport { Button, Icon } from 'semantic-ui-react';\r\nimport VerifyAuthentication from '../utilities/verifyAuthentication';\r\n\r\nclass Navbar extends Component {\r\n    state = { \r\n        doctor: '',\r\n        user: ''\r\n     }\r\n\r\n    componentDidMount() {\r\n        const doctor = VerifyAuthentication.isDoctorAuthenticated();\r\n        const user = VerifyAuthentication.isUserAuthenticated();\r\n        this.setState({ doctor, user });\r\n    }\r\n\r\n    render() { \r\n\r\n        const { doctor, user } = this.state;\r\n\r\n        return ( \r\n            <nav className=\"navbar navbar-expand-lg navbar-dark text-white\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\" style={{marginRight: '0'}}>HealthyLife</Link>\r\n                    \r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse ml-4\" id=\"navbarNavAltMarkup\">\r\n                        <div className=\"navbar-nav\">\r\n                            <NavLink className=\"nav-link\" aria-current=\"page\" to=\"/home\">Home</NavLink>\r\n                            { !doctor && !user &&\r\n                            <React.Fragment>\r\n                                <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink> \r\n                                <NavLink className=\"nav-link\" to=\"/userRegistration\">User Registration</NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/doctorRegistration\">Doctor Registration</NavLink>\r\n                            </React.Fragment> }\r\n                            { doctor && \r\n                            <React.Fragment>\r\n                                <NavLink className=\"nav-link\" to=\"/doctor/jobs\">Jobs</NavLink>\r\n                                <li className=\"nav-item dropdown\">\r\n                                    <a className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Donations\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <Link className=\"dropdown-item\" to=\"/doctor/bloodDonations\">Blood Donations</Link>\r\n                                    <Link className=\"dropdown-item\" to=\"/doctor/organDonations\">Organ Donations</Link>\r\n                                    </div>\r\n                                </li>\r\n                                <NavLink className=\"nav-link\" to=\"/logout\" style={{position: 'fixed', right: '15px'}}>\r\n                                    <Button inverted color=\"red\"><Icon name=\"sign-out\" />Logout</Button>\r\n                                </NavLink>\r\n                            </React.Fragment> }\r\n                            { user && \r\n                            <React.Fragment>\r\n                                <li className=\"nav-item dropdown\">\r\n                                    <a className=\"nav-link dropdown-toggle\" to=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                    Donate\r\n                                    </a>\r\n                                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                                    <Link className=\"dropdown-item\" to=\"/user/donateBloodHospitals\">Donate Blood</Link>\r\n                                    <Link className=\"dropdown-item\" to=\"/user/donateOrganHospitals\">Donate Organ</Link>\r\n                                    </div>\r\n                                </li>\r\n                                <NavLink className=\"nav-link\" to=\"/user/coins\">My Coins</NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/user/notifications\">Notifications</NavLink>\r\n                                <NavLink className=\"nav-link\" to=\"/logout\" style={{position: 'fixed', right: '15px'}}>\r\n                                    <Button inverted color=\"red\"><Icon name=\"sign-out\" />Logout</Button>\r\n                                </NavLink>\r\n                            </React.Fragment> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Navbar;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserRegistration.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DoctorRegistration.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Login.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\verifyAuthentication.js",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\Logout.jsx",["80","81"],"import React, { Component } from 'react';\r\n\r\nclass Logout extends Component {\r\n    \r\n    logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('role');\r\n        window.location = '/';\r\n    }\r\n\r\n    render() { \r\n        {this.logout()};\r\n        return ( null );\r\n    }\r\n}\r\n \r\nexport default Logout;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\utilities\\ProtectedRoute.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodHospitals.jsx",["82"],"import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Card, Icon } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport axios from 'axios';\r\n\r\nclass DonateBloodHospitals extends Component {\r\n\r\n    state = { \r\n        doctorList: [],\r\n        filteredDoctorList: [],\r\n        search: ''\r\n     }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const doctorList = await axios.get(\"http://localhost:9000/api/doctor\");\r\n            this.setState({ doctorList: doctorList.data, filteredDoctorList: doctorList.data });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    renderDoctorList = () => {\r\n        const list = this.state.filteredDoctorList.map((doctor,index) => {\r\n            return (\r\n                <div className=\"col-lg-4 my-3\" key={index} >\r\n                    <Card className=\"mx-auto\">\r\n                        <Card.Content key={doctor.name} header={doctor.name} />\r\n                        <Card.Content key={doctor.address} description={doctor.address + \", \" + doctor.city} />\r\n                        <Card.Content key={index} extra>\r\n                            <Link key='1' to={`/user/donateBlood/${doctor._id}`} >\r\n                                <Button color='purple'>View</Button>\r\n                            </Link>\r\n                        </Card.Content>\r\n                    </Card>\r\n                </div>\r\n            );\r\n        });\r\n        return list;\r\n    }\r\n\r\n    searchDoctor = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        const filteredDoctorList = this.state.doctorList.filter( doctor => doctor.city.toLowerCase().indexOf(value.toLowerCase().trim())>=0);\r\n        this.setState({ filteredDoctorList, search: value });\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div className=\"container mt-3\">\r\n                <div class=\"input-group mt-4\">\r\n                    <input className=\"form-control border-white\" type='search' name='search' id='search' placeholder=\"Search by city\" value={this.state.search} onChange={this.searchDoctor} autoComplete='off' />\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text bg-white border border-white\"><Icon name='search' className=\"mb-1 ml-2\" /></span>\r\n                    </div>\r\n                </div>\r\n                \r\n                {this.state.filteredDoctorList.length>0 ?\r\n                    <div className=\"row mx-auto mt-3\">\r\n                        { this.state.doctorList.length? this.renderDoctorList() : <h1>No Hospitals/Doctors Available</h1>}\r\n                    </div> : <h2>No Hospital/Doctor Found</h2>\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DonateBloodHospitals;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\DonateBloodDetails.jsx",["83","84"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\nclass DonateBloodDetails extends Component {\r\n    state = { \r\n        doctor: '',\r\n        user: '',\r\n        disabled: false\r\n     }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { _id } = jwtDecode(localStorage.getItem('token'));\r\n            const doctor = await axios.get(`http://localhost:9000/api/doctor/${this.props.match.params.id}`);\r\n            const user = await axios.get(`http://localhost:9000/api/user/${_id}`);\r\n            this.setState({ doctor: doctor.data, user: user.data, disabled: user.data.currentBloodDonationRequest });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    donateBlood = async () => {\r\n        console.log('Blood donated');\r\n        try {\r\n            const { _id } = jwtDecode(localStorage.getItem('token'));\r\n            const obj1 = {\r\n                _id,\r\n                hospital: this.state.doctor.name\r\n            }\r\n            const obj2 = {\r\n                hospitalId: this.props.match.params.id,\r\n                userId: _id,\r\n                userName: this.state.user.name\r\n            }\r\n            const updatedUser = await axios.post(`http://localhost:9000/api/user/donateBlood/${_id}`, obj1);\r\n            const res = await axios.post(`http://localhost:9000/api/bloodDonation/new`, obj2);\r\n            this.setState({ disabled: true });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const {name, email, contact, address, city} = this.state.doctor;\r\n        return ( \r\n            <div className=\"container mt-2\">\r\n                <h2 className=\"text-danger\">Hospital/Doctor Details</h2>\r\n                <h4>Name : <span className=\"text-white\">{name}</span></h4>\r\n                <h4>Email : <span className=\"text-white\">{email}</span></h4>\r\n                <h4>Contact : <span className=\"text-white\">{contact}</span></h4>\r\n                <h4>Address : <span className=\"text-white\">{address}, {city}</span></h4>\r\n                <Button color='purple' onClick={this.donateBlood} disabled={this.state.disabled}>Donate Blood</Button>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default DonateBloodDetails;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationsDoctor.jsx",[],"C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\BloodDonationSlot.jsx",["85"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Joi from 'joi-browser';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'semantic-ui-react';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nclass BloodDonationSlot extends Component {\r\n    state = { \r\n        request: '',\r\n        user: '',\r\n        slot: {\r\n            date: '',\r\n            time: ''\r\n        },\r\n        error: {},\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const request = await axios.get(`http://localhost:9000/api/bloodDonation/getRequest/${this.props.match.params.id}`);\r\n            const user = await axios.get(`http://localhost:9000/api/user/${request.data.userId}`);\r\n            console.log(request.data);\r\n            this.setState({request: request.data, user: user.data})\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    schema = {\r\n        date: Joi.date().min('now').required().label('Date'),\r\n        time: Joi.string().required().label('Time')\r\n    }\r\n\r\n    validate = () => {\r\n        console.log(\"validate form\");\r\n        const { error } = Joi.validate(this.state.slot, this.schema);\r\n        if(!error) \r\n            return null;\r\n        console.log(error);\r\n\r\n        const errors = {};\r\n        for(let item of error.details)\r\n            errors[item.path[0]] = item.message;\r\n        return errors;\r\n    }\r\n\r\n    validateProperty = (name, value) => {\r\n        const schema = {\r\n            [name]: this.schema[name]\r\n        }\r\n        const obj = {\r\n            [name]: value\r\n        }\r\n        const {error} = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    }\r\n\r\n    onChange = (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        const error = { ...this.state.error };\r\n        const errorMessage = this.validateProperty(name,value);\r\n        if (errorMessage) error[name] = errorMessage;\r\n        else delete error[name];\r\n\r\n        const slot = {...this.state.slot};\r\n        slot[name] = value;\r\n        this.setState({ slot, error });\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"handling form\");\r\n\r\n        const errors = this.validate();\r\n        this.setState({error : errors || {}});\r\n        if(errors)\r\n            return;\r\n        this.doSubmit();\r\n    }\r\n\r\n    doSubmit = async () => {\r\n        this.setState({ loading: true, disabled: true });\r\n        try {\r\n            console.log(\"submitting form\");\r\n            const obj = {\r\n                _id: this.props.match.params.id,\r\n                date: this.state.slot.date,\r\n                time: this.state.slot.time\r\n            };\r\n            const requests = await axios.post(\"http://localhost:9000/api/bloodDonation/fixSlot\", obj);\r\n            this.setState({ disabled: true });\r\n            this.props.history.push(\"/doctor/bloodDonations\");\r\n        } catch (error) {\r\n            console.log('error----',error.response);\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n                <div className=\"alert alert-warning mx-auto mt-3\" style={{width: '60%', fontWeight: 'bolder', fontSize: '15px', fontFamily: 'Goldman'}}>\r\n                    <div className='row'>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Name : </span>\r\n                            <span className='text-dark'>{this.state.user.name}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Date of Birth : </span>\r\n                            <span className='text-dark'>{this.state.user.dob}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Email : </span>\r\n                            <span className='text-dark'>{this.state.user.email}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6\">\r\n                            <span className='text-danger'>Last Blood Donation Date : </span>\r\n                            <span className='text-dark'>\r\n                                {this.state.user.lastBloodDonationDate ? this.state.user.lastBloodDonationDate : \"(Donating first time)\"}\r\n                            </span>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    { this.state.request.appointmentTime ? \r\n                    <div>\r\n                        <div className='row'>\r\n                            <div className=\"col-lg-6\">\r\n                                <span className='text-danger'>Appointment Date : </span>\r\n                                <span className='text-dark'>{this.state.request.appointmentDate}</span>\r\n                            </div>\r\n                            <div className=\"col-lg-6\">\r\n                                <span className='text-danger'>Appointment Time : </span>\r\n                                <span className='text-dark'>{this.state.request.appointmentTime}</span>\r\n                            </div>\r\n                        </div>\r\n                        <div className='row mt-2'>\r\n                            <div className=\"mx-auto\">\r\n                                <Button color=\"blue\">Blood Donated</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null}\r\n                </div>\r\n                { this.state.request.appointmentTime ? \r\n                null :\r\n                <div className='pb-4'>\r\n                    <div className=\"my-5 mx-auto\" style={{width: '40vw', fontFamily: 'Goldman', border: '3px solid rgb(243,9,212)', boxShadow: '5px 5px 15px rgb(243,9,212)', background: 'linear-gradient(to right bottom, rgba(104,177,249,0.9), rgba(243,9,212,0.9))' }}>\r\n                        <h3 className=\"text-center my-3\" style={{fontFamily: 'Goldman'}}>Provide Time Slot</h3>\r\n                        <hr className=\"w-25 mx-auto text-dark font-weight-bolder\" />\r\n                        {/* <div className=\"text-center my-4\">\r\n                            <NewQuizSvg width='130px' />\r\n                        </div> */}\r\n                        <form onSubmit={this.handleSubmit} className=\"px-3\"> \r\n                            <div className='row'>\r\n                                <div className=\"form-group my-2 col-lg-6\">\r\n                                    <label>Date</label>\r\n                                    <input name=\"date\" type=\"Date\" className=\"form-control\" style={{fontFamily: 'Goldman'}} id=\"date\" value={this.state.slot.date} onChange={this.onChange}/>\r\n                                    {this.state.error.date && <div className=\"my-2\" style={{color: 'cyan'}}>{this.state.error.date}</div>}\r\n                                </div>\r\n                                <div className=\"form-group my-2 col-lg-6\">\r\n                                    <label>Time</label>\r\n                                    <input name=\"time\" type=\"time\" className=\"form-control\" style={{fontFamily: 'Goldman'}} id=\"time\" value={this.state.slot.time} onChange={this.onChange}/>\r\n                                    {this.state.error.time && <div className=\"my-2\" style={{color: 'cyan'}}>{this.state.error.time}</div>}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-center\">\r\n                                <Button type=\"submit\" color='green' className=\"px-2 font-weight-light\">Confirm</Button>\r\n                                <Link to='/doctor/bloodDonations'>\r\n                                    <button type=\"reset\" className=\"btn btn-dark border-2 mx-2 my-3\">Cancel</button>\r\n                                </Link>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                }\r\n            </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BloodDonationSlot;","C:\\Users\\asus\\hackiiitv20-submissions\\team#12-3\\frontend\\src\\pages\\UserNotifications.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":43,"column":37,"nodeType":"92","endLine":43,"endColumn":184},{"ruleId":"90","severity":1,"message":"91","line":58,"column":37,"nodeType":"92","endLine":58,"endColumn":184},{"ruleId":"93","severity":1,"message":"94","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"98","line":12,"column":9,"nodeType":"99","messageId":"100","endLine":12,"endColumn":24},{"ruleId":"93","severity":1,"message":"101","line":45,"column":15,"nodeType":"95","messageId":"96","endLine":45,"endColumn":19},{"ruleId":"93","severity":1,"message":"102","line":37,"column":19,"nodeType":"95","messageId":"96","endLine":37,"endColumn":30},{"ruleId":"93","severity":1,"message":"103","line":38,"column":19,"nodeType":"95","messageId":"96","endLine":38,"endColumn":22},{"ruleId":"93","severity":1,"message":"104","line":93,"column":19,"nodeType":"95","messageId":"96","endLine":93,"endColumn":27},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'name' is assigned a value but never used.","'updatedUser' is assigned a value but never used.","'res' is assigned a value but never used.","'requests' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]